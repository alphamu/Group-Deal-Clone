<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
   http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/tx 
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<context:property-placeholder
		location="/WEB-INF/classes/hiberbate-context.properties" />

	<!-- Enable annotation style of managing transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Declare the Hibernate SessionFactory for retrieving Hibernate sessions -->
	<!-- See http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html -->
	<!-- See http://docs.jboss.org/hibernate/stable/core/api/index.html?org/hibernate/SessionFactory.html -->
	<!-- See http://docs.jboss.org/hibernate/stable/core/api/index.html?org/hibernate/Session.html -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" 
		p:dataSource-ref="dataSource" p:configLocation="${hibernate.config}" p:packagesToScan="com.groupdealclone.app" 
		/> -->

	<!-- Process @PersistenceContext to inject entity manager factory http://static.springframework.org/spring/docs/2.1.x/reference/orm.html#orm-jpa-straight 
		http://static.springframework.org/spring/docs/2.1.x/api/org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor.html 
		Note: this post processor is implicitly supplied by context:annotation-config 
		or context:component-scan, however, we explicitly choose not to use those 
		mechanisms as they encourge dependency lookup (versus the more flexible dependency 
		injection) -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="dbcon" />
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${app.jdbc.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${app.jdbc.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${app.jdbc.show.sql}</prop>
			</props>
		</property>
	</bean>

	<!-- Declare a datasource that has pooling capabilities -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="${app.jdbc.driverClassName}"
		p:jdbcUrl="${app.jdbc.url}" p:user="${app.jdbc.username}" p:password="${app.jdbc.password}"
		p:acquireIncrement="5" p:idleConnectionTestPeriod="60" p:maxPoolSize="100"
		p:maxStatements="50" p:minPoolSize="10" />

	<!-- Publishing session factory to be able view statistics -->
	<bean id="sessionFactory" factory-bean="entityManagerFactory"
		factory-method="getSessionFactory" />

	<!-- Declare a transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- Bindings used in the application -->
	<bean id="campaignManager" class="com.groupdealclone.app.service.SimpleCampaignManager" />
	<bean id="campaignDao" class="com.groupdealclone.app.dao.JdbcCampaignDao" />

	<bean id="cityManager" class="com.groupdealclone.app.service.SimpleCityManager" />
	<bean id="cityDao" class="com.groupdealclone.app.dao.JdbcCityDao" />

</beans>